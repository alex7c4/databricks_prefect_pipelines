name: GitHub Actions CI

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      # install & configure poetry
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      - name: Install and configure Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: 1.5.*
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      # tests
      - name: Static checks
        run: source .venv/bin/activate && make checks

      - name: Static checks
        run: source .venv/bin/activate && make pytest


#  Explore-GitHub-Actions:
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#
#      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#
#      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#
#      - name: Check out repository code
#        uses: actions/checkout@v3
#
#      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#
#      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#
#      - name: List files in the repository
#        run: |
#          ls ${{ github.workspace }}
#
#      - run: echo "üçè This job's status is ${{ job.status }}."
